@model Ripper.Models.Cuts
@{
    ViewBag.Title = "Calculator";
}
<style>
    select {
        width: 174px;
    }

    .multi {
        /*width: 24px;*/
    }

    .bg-info {
        padding: 15px;
    }
</style>


@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { id = "CutForm" }))
{
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h2>Cuts</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <p class="bg-info">All measurements are in <abbr title="millimeters">mm</abbr> unless otherwise specified.</p>
                @Html.ValidationSummary(false, "There's been an error submitting this form. Please check the following and try again:")
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>Available Stock:</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="col-md-6">
                    @Html.DropDownListFor(x => x.StdBoards, Model.StdBoards, new { @class = "form-control" })
                </div>
                <div class="col-md-4 form-group">
                    <div class="input-group">
                        <div class="input-group-addon">X</div>
                        <input type="number" class="form-control" id="bmult" placeholder="1">
                    </div>
                </div>
                <div class="col-md-2">
                    <input class="btn btn-default" id="AddBoard" type="button" value="Add" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="col-md-6">
                    @Html.ListBoxFor(m => m.BoardList, new List<SelectListItem>(), new { @class = "form-control" })
                </div>
                <div class="col-md-4">
                    <input class="btn btn-default" id="RemBoard" type="button" value="Remove" />
                    @Html.ValidationMessageFor(m => m.BoardList)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h3>Lengths Required:</h3>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="col-md-6">
                    <input id="leng" type="text" class=" form-control" />
                </div>
                <div class="col-md-4 form-group">
                    <div class="input-group">
                        <div class="input-group-addon">X</div>
                        <input type="number" class="form-control" id="lmult" placeholder="1">
                    </div>
                </div>
                <div class="col-md-2">
                    <input class="btn btn-default" id="AddLeng" type="button" value="Add" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="col-md-6">
                    @Html.ListBoxFor(m => m.LengthList, new List<SelectListItem>(), new { @class = "form-control" })
                </div>
                <div class="col-md-4">
                    <input class="btn btn-default" id="RemLeng" type="button" value="Remove" />
                    @Html.ValidationMessageFor(m => m.LengthList)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <input class="btn btn-primary" id="sub" type="submit" value="Calculate" />
            </div>
        </div>
    </div>
}
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#AddBoard').on('click', function () {
                console.log($('#BoardList'));
                console.log($('#StdBoards').val());
                var multi = $('#bmult').val();
                if (multi > 0) {
                    for (var i = 0; i < multi; i++) {
                        $('#BoardList').append("<option value='" + $('#StdBoards').val() + "'>" + $('#StdBoards').val() + "</option>");
                    }
                }

                $('#bmult').val(1);
                return false;
            });
            $('#AddLeng').on('click', function () {
                console.log($('#LengthList'));
                var multi = $('#lmult').val();
                if (multi > 0) {
                    for (var i = 0; i < multi; i++) {
                        $('#LengthList').append("<option value='" + $('#leng').val() + "'>" + $('#leng').val() + "</option>");
                    }
                }

                $('#leng').val('');
                $('#lmult').val(1);
                return false;
            });


            $('#CutForm').on('click', function () {
                $('#BoardList option').attr('selected', 'selected');
                $('#LengthList option').attr('selected', 'selected');
                $('form').validate();
            });

        });
    </script>
}

